---
import {toPlainMessage} from "@bufbuild/protobuf";
import {queryClient} from "../../client";

const {slug} = Astro.params;
const path = slug?.split("/");
const [accountUid, ...restPath] = path || [];
const validPathTerms = restPath.filter((term) => !!term);
const rawDoc = await queryClient.documents.getDocument({
  account: accountUid,
  path: validPathTerms.length ? `/${validPathTerms.join("/")}` : "",
});
const document = toPlainMessage(rawDoc);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <section class="mx-auto max-w-xl py-12">
      <h1 class="text-4xl font-bold">
        {document.metadata.name || "Untitled Document"}
      </h1>
    </section>
    <section class="mx-auto max-w-xl py-12">
      <article class="prose lg:prose-xl">
        {
          document.content.map((block) =>
            block.block?.text ? (
              <p class="text-gray-800 leading-7 mb-6">{block.block.text}</p>
            ) : null
          )
        }
      </article>
    </section>
  </body>
</html>
