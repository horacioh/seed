// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts,import_extension=none"
// @generated from file documents/v2alpha/documents.proto (package com.seed.documents.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ChangeDocumentRequest, ChangeProfileDocumentRequest, Document, GetDocumentIndexRequest, GetDocumentIndexResponse, GetDocumentRequest, GetProfileDocumentRequest, ListAccountDocumentsRequest, ListDocumentBranchesRequest, ListDocumentBranchesResponse, ListDocumentsRequest, ListDocumentsResponse, ListProfileDocumentsRequest, ListProfileDocumentsResponse, MergeChangesRequest, PushDocumentRequest, RebaseChangesRequest } from "./documents_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * Documents service provides access to documents.
 *
 * @generated from service com.seed.documents.v2alpha.Documents
 */
export const Documents = {
  typeName: "com.seed.documents.v2alpha.Documents",
  methods: {
    /**
     * Gets a single document.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.GetDocument
     */
    getDocument: {
      name: "GetDocument",
      I: GetDocumentRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
    /**
     * Gets an account's profile document.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.GetProfileDocument
     */
    getProfileDocument: {
      name: "GetProfileDocument",
      I: GetProfileDocumentRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
    /**
     * Immediately changes an account's profile document.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ChangeProfileDocument
     */
    changeProfileDocument: {
      name: "ChangeProfileDocument",
      I: ChangeProfileDocumentRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all profile documents.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ListProfileDocuments
     */
    listProfileDocuments: {
      name: "ListProfileDocuments",
      I: ListProfileDocumentsRequest,
      O: ListProfileDocumentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a document within the index(es) of other documents.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.GetDocumentIndex
     */
    getDocumentIndex: {
      name: "GetDocumentIndex",
      I: GetDocumentIndexRequest,
      O: GetDocumentIndexResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Immediately changes a document.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ChangeDocument
     */
    changeDocument: {
      name: "ChangeDocument",
      I: ChangeDocumentRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all documents. Only the most recent versions show up.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ListDocuments
     */
    listDocuments: {
      name: "ListDocuments",
      I: ListDocumentsRequest,
      O: ListDocumentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists branches of a document. Includes standalone and index branches, and any drafts for these branches
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ListDocumentBranches
     */
    listDocumentBranches: {
      name: "ListDocumentBranches",
      I: ListDocumentBranchesRequest,
      O: ListDocumentBranchesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Push Local document to the gateway.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.PushDocument
     */
    pushDocument: {
      name: "PushDocument",
      I: PushDocumentRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Lists documents owned by a given account.
     *
     * @generated from rpc com.seed.documents.v2alpha.Documents.ListAccountDocuments
     */
    listAccountDocuments: {
      name: "ListAccountDocuments",
      I: ListAccountDocumentsRequest,
      O: ListDocumentsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * Merge service provides access to merge documents.
 *
 * @generated from service com.seed.documents.v2alpha.Merge
 */
export const Merge = {
  typeName: "com.seed.documents.v2alpha.Merge",
  methods: {
    /**
     * Merge changes and publishes.
     *
     * @generated from rpc com.seed.documents.v2alpha.Merge.MergeChanges
     */
    mergeChanges: {
      name: "MergeChanges",
      I: MergeChangesRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
    /**
     * Rebase changes
     *
     * @generated from rpc com.seed.documents.v2alpha.Merge.RebaseChanges
     */
    rebaseChanges: {
      name: "RebaseChanges",
      I: RebaseChangesRequest,
      O: Document,
      kind: MethodKind.Unary,
    },
  }
} as const;

