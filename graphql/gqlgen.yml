# This is a configuration file for github.com/99designs/gqlgen.
# It generates Go code based on the GraphQL schema.

# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - ./schema.graphql

# Where should the generated server code go?
exec:
  filename: ../backend/graphql/internal/generated/exec.go
  package: generated

# Where should any generated models go?
model:
  filename: ../backend/graphql/internal/generated/models_gen.go
  package: generated

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: ../backend/graphql/internal/resolver
  package: resolver

struct_tag: json

omit_slice_element_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - 'seed/backend/graphql/internal/model'

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
