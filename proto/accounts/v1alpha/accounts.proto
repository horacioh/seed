syntax = "proto3";

package com.seed.accounts.v1alpha;

option go_package = "seed/backend/genproto/accounts/v1alpha;accounts";

// Accounts API service.
service Accounts {
  // Lookup an Account information across the already known accounts.
  // Can also be used to retrieve our own account.
  rpc GetAccount(GetAccountRequest) returns (Account);

  // Updates profile information of our own Account.
  // Doesn't support partial updates!
  // Users should call GetAccount first,
  // change the necessary fields in place,
  // and then send the same Profile object back to UpdateProfile.
  rpc UpdateProfile(Profile) returns (Account);

  // List accounts known to the backend (excluding our own account). New accounts can be discovered naturally by
  // interacting with the network, or users can ask to discover specific accounts using
  // the Networking API.
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);

  // Set or unset the trustness of an account. An account is untrusted by default except for our own.
  // Returns the modified account.
  rpc SetAccountTrust(SetAccountTrustRequest) returns (Account);
}

message GetAccountRequest {
  // ID of the Account to be looked up. If empty - our own account will be returned.
  string id = 1;
}

message ListAccountsRequest {
  int32 page_size = 1;

  string page_token = 2;
}

message ListAccountsResponse {
  repeated Account accounts = 1;

  string next_page_token = 2;
}

message Account {
  // Hyper Media Account ID.
  string id = 1;

  // Profile information of this account.
  Profile profile = 2;

  // List of known devices of this Account.
  map<string, Device> devices = 3;

  // Defining if the account is trusted or not.
  bool is_trusted = 4;
}

// Profile information of the user Account.
message Profile {
  // Optional. Alias is a user-defined handle for their profile.
  // There's no enforcement on this being unique.
  string alias = 1;

  // Optional. Description of the user's profile.
  string bio = 2;

  // Optional. CID to the avatar image hosted on IPFS.
  string avatar = 3;

  // Optional. Hypermedia ID of the Account's root/entrypoint document.
  string root_document = 4;
}

message Device {
  // CID-encoded Peer ID of this device.
  string device_id = 1;
}

message SetAccountTrustRequest {
  // ID of the Account to trust/untrust.
  string id = 1;

  //Whether to trust or not the account.
  bool is_trusted = 2;
}